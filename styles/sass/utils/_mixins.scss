// ===================================
// MIXINS
// Mixins reutilizáveis para o projeto
// ===================================

@use 'sass:color';
@use 'variables' as *;

// Breakpoints Responsivos
@mixin mobile {
  @media (max-width: #{$breakpoint-md - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-md}) and (max-width: #{$breakpoint-xl - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-xl}) {
    @content;
  }
}

@mixin mobile-small {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin mobile-extra-small {
  @media (max-width: #{$breakpoint-xs}) {
    @content;
  }
}

@mixin tablet-landscape {
  @media (min-width: #{$breakpoint-lg}) and (max-width: #{$breakpoint-xl - 1px}) {
    @content;
  }
}

// Flexbox Utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Posicionamento
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// Botões
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-md $spacing-lg;
  border: none;
  border-radius: $border-radius;
  font-family: $font-primary;
  font-size: $font-size-base;
  font-weight: 500;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal;
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $primary-color;
  color: white;
  
  &:hover:not(:disabled) {
    background-color: color.adjust($primary-color, $lightness: -10%);
    transform: translateY(-1px);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: $primary-color;
  border: 2px solid $primary-color;
  
  &:hover:not(:disabled) {
    background-color: $primary-color;
    color: white;
  }
}

// Cards
@mixin card-base {
  background: $bg-white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow;
  padding: $spacing-xl;
  transition: all $transition-normal;
  
  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }
}

@mixin card-empty {
  @include card-base;
  background: color.adjust($bg-main, $lightness: 2%);
  border: 2px dashed color.adjust($text-light, $lightness: 20%);
  color: $text-light;
  text-align: center;
}

// Overlay
@mixin overlay($opacity: 0.7) {
  position: relative;
  
  &::before {
    content: '';
    @include absolute-full;
    background: rgba(0, 0, 0, $opacity);
    z-index: 1;
  }
  
  > * {
    position: relative;
    z-index: 2;
  }
}

// Text Utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-truncate-lines($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Animations
@mixin fade-in($duration: $transition-normal) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@mixin slide-in-down($duration: $transition-normal) {
  transform: translateY(-20px);
  opacity: 0;
  animation: slideInDown $duration ease-out forwards;
}

@keyframes slideInDown {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Hover Effects
@mixin hover-lift {
  transition: transform $transition-normal;
  
  &:hover {
    transform: translateY(-3px);
  }
}

@mixin hover-scale {
  transition: transform $transition-normal;
  
  &:hover {
    transform: scale(1.05);
  }
}

// Grid System
@mixin grid-container {
  display: grid;
  gap: $spacing-xl;
  
  @include mobile {
    grid-template-columns: 1fr;
    gap: $spacing-lg;
  }
}

@mixin grid-2-cols {
  @include grid-container;
  grid-template-columns: repeat(2, 1fr);
  
  @include mobile {
    grid-template-columns: 1fr;
  }
}

@mixin grid-3-cols {
  @include grid-container;
  grid-template-columns: repeat(3, 1fr);
  
  @include tablet {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include mobile {
    grid-template-columns: 1fr;
  }
}

@mixin grid-4-cols {
  @include grid-container;
  grid-template-columns: repeat(4, 1fr);
  
  @include tablet {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include mobile {
    grid-template-columns: 1fr;
  }
}